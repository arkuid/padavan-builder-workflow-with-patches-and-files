name: Build firmware

on:
  workflow_dispatch:
    inputs:
      router_model:
        description: "Router model"
        type: string
        required: true
        default: "tplink-c5-v4-16M"

jobs:
  build:
    runs-on: ubuntu-22.04
    container: registry.gitlab.com/hadzhioglu/padavan-ng
    defaults: { run: { shell: bash } }
    
    steps:
    - uses: actions/checkout@v4

    - name: Get variables
      run: |
        sed -i 's|\r$||g' variables build-${{ github.event.inputs.router_model }}.config
        . <(cat variables build-${{ github.event.inputs.router_model }}.config)
        PADAVAN_THEMES="${PADAVAN_THEMES[*]}"
        for v in "${!PADAVAN_@}" "${!CONFIG_@}"; do
          echo "$v=${!v}" >> $GITHUB_ENV
        done

    - name: Download sources and toolchain
      run: |
        git config --global --add safe.directory '*'
        git clone -b "$PADAVAN_BRANCH" "$PADAVAN_REPO"
        git -C padavan-ng checkout "$PADAVAN_COMMIT"
        wget -qO- "$PADAVAN_TOOLCHAIN_URL" | tar -C padavan-ng --zstd -xf -

    - name: Install themes
      run: |
        if [[ -n $PADAVAN_THEMES ]]; then
          git clone --depth 1 -b "$PADAVAN_THEMES_BRANCH" "$PADAVAN_THEMES_REPO" themes
          cp -r themes/common-theme themes/jquery.js padavan-ng/trunk/user/www/n56u_ribbon_fixed

          for theme in $PADAVAN_THEMES; do
            echo "Installing $theme theme"
            cp -r "themes/$theme-theme" padavan-ng/trunk/user/www/n56u_ribbon_fixed
          done
        fi

    - name: Run custom pre-build script
      run: '[[ -f pre-build.sh ]] && . pre-build.sh || :'

    - name: Build firmware
      run: |
        ROUTER_MODEL="${{ github.event.inputs.router_model }}"
        
        # Применяем патчи
        if [ -d "patches" ] && [ "$(ls -A patches/$ROUTER_MODEL/*.patch 2>/dev/null)" ]; then
          echo "Applying patches for $ROUTER_MODEL..."
          cd padavan-ng
          for patch_file in ../patches/$ROUTER_MODEL/*.patch; do
            echo "Applying patch: $(basename $patch_file)"
            if git apply --check "$patch_file" 2>/dev/null; then
              git apply "$patch_file"
              echo "✓ Patch applied successfully"
            else
              echo "⚠ Applying patch with skip: $(basename $patch_file)"
              patch -p1 --forward < "$patch_file" || true
            fi
          done
          cd ..
        else
          echo "No patches found for $ROUTER_MODEL, skipping..."
        fi

        # Копируем дополнительные файлы
        if [ -d "routers/$ROUTER_MODEL" ] && [ "$(ls -A routers/$ROUTER_MODEL)" ]; then
          echo "Copying config files for $ROUTER_MODEL..."
          cp -rv routers/$ROUTER_MODEL/* padavan-ng/trunk/configs/
        else
          echo "No config files found for $ROUTER_MODEL, skipping..."
        fi

        # Копируем основной конфиг
        cp build-$ROUTER_MODEL.config padavan-ng/trunk/.config

        # Копируем все дополнительные файлы из корня (если нужно)
        if [ -f "rules" ]; then
          cp -v rules padavan-ng/trunk/
        fi
        if [ -f "Makefile" ]; then
          cp -v Makefile padavan-ng/trunk/
        fi

        # Сборка прошивки
        cd padavan-ng/trunk
        ./clear_tree.sh
        ./build_firmware.sh

        # Поиск файла прошивки
        FW_FILE_NAME="$(find images -type f -regextype posix-extended -iregex ".*\.(trx|bin)$" \
                        -printf "%T@\t%f\n" | sort -V | tail -1 | cut -f2)"
        [[ -n $FW_FILE_NAME ]] || { echo "Firmware file not found"; exit 1; }
        echo "FW_FILE_NAME=$FW_FILE_NAME" >> $GITHUB_ENV

    - name: Run custom post-build script
      run: '[[ -f post-build.sh ]] && . post-build.sh || :'

    - name: Prepare artifacts
      run: |
        cp "padavan-ng/trunk/images/$FW_FILE_NAME" .
        echo "BUILD_TIMESTAMP=$(date '+%Y.%m.%d_%H.%M.%S')" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: padavan-ng_${{ env.CONFIG_VENDOR }}_${{ env.CONFIG_FIRMWARE_PRODUCT_ID }}_${{ env.BUILD_TIMESTAMP }}
        retention-days: 7
        path: |
          ${{ env.FW_FILE_NAME }}
          build-${{ github.event.inputs.router_model }}.config

    - name: Check firmware size
      run: |
        ROUTER_MODEL="${{ github.event.inputs.router_model }}"
        partitions="padavan-ng/trunk/configs/boards/$CONFIG_VENDOR/$CONFIG_FIRMWARE_PRODUCT_ID/partitions.config"
        max_fw_size="$(awk '/Firmware/ { getline; getline; sub(",", ""); print strtonum($2); }' "$partitions")"
        fw_size="$(stat -c %s "$FW_FILE_NAME")"

        if ((fw_size > max_fw_size)); then
          fw_size_fmtd="$(numfmt --grouping "$fw_size") bytes"
          max_fw_size_fmtd="$(numfmt --grouping "$max_fw_size") bytes"
          echo "Firmware size ($fw_size_fmtd) exceeds max size ($max_fw_size_fmtd) for $ROUTER_MODEL"
          exit 1
        fi